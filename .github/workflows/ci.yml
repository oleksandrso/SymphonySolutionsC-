name: Run Playwright Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libx264-dev libnss3 libatk1.0-0 libatk-bridge2.0-0 \
                                  libxcomposite1 libxdamage1 libxrandr2 \
                                  libgbm1 libasound2 libpangocairo-1.0-0 \
                                  libgtk-3-0 libx11-xcb1 xvfb

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-
            
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Display installed .NET info
        run: dotnet --info
          
      - name: Restore dependencies
        run: dotnet restore

      - name: Install Microsoft.Playwright package
        run: dotnet add package Microsoft.Playwright

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Install Playwright CLI (local tool)
        run: |
          dotnet new tool-manifest
          dotnet tool install Microsoft.Playwright.CLI
          dotnet tool run playwright install
          
      - name: Run tests with TRX logging
        run: xvfb-run --auto-servernum dotnet test --logger "trx;LogFileName=test-results.trx" --results-directory TestResults
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: TestResults

